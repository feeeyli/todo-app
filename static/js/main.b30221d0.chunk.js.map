{"version":3,"sources":["infra/inputs/NewTodo/index.jsx","infra/layout/Actions/index.jsx","infra/layout/Header/index.jsx","components/TodoItem/index.jsx","infra/layout/TodoList/index.jsx","App.jsx","index.jsx"],"names":["NewTodo","createTodo","className","onClick","type","placeholder","Actions","filterTodoList","todosLeft","actualFilter","clearTodoList","Header","TodoItem","todo","id","completeTodo","deleteTodo","completed","onChange","title","TodoList","todoList","filterMode","filterBy","filter","active","filteredTodoList","map","key","App","useState","setTodoList","setFilterMode","updateList","newList","localStorage","setItem","JSON","stringify","useEffect","parse","getItem","target","nextSibling","value","length","todoId","task","dataset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b30221d0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.scss\";\n\nconst NewTodo = ({ createTodo }) => {\n\treturn (\n\t\t<div className=\"new-todo\">\n\t\t\t<button className=\"new-todo__complete\" onClick={createTodo} ></button>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"new-todo__input\"\n\t\t\t\tplaceholder=\"Create a new todo...\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport './style.scss';\n\nconst Actions = ({ filterTodoList, todosLeft, actualFilter, clearTodoList }) => {\n    return (\n        <div className=\"actions\">\n            <span className=\"actions__left-counter\">{todosLeft} items left</span>\n            <div className=\"actions__filter\">\n                <button onClick={filterTodoList} data-filter-mode=\"all\" className={`filter__mode${actualFilter === \"all\" ? \" active\" : \"\"}`}>All</button>\n                <button onClick={filterTodoList} data-filter-mode=\"active\" className={`filter__mode${actualFilter === \"active\" ? \" active\" : \"\"}`}>Active</button>\n                <button onClick={filterTodoList} data-filter-mode=\"completed\" className={`filter__mode${actualFilter === \"completed\" ? \" active\" : \"\"}`}>Completed</button>\n            </div>\n            <button className=\"actions__clear\" onClick={clearTodoList} >Clear Completed</button>\n        </div>\n    );\n}\n\nexport default Actions","import React from \"react\";\nimport \"./style.scss\";\n\nconst Header = () => {\n\treturn (\n\t\t<header>\n\t\t\t<h1>Todo</h1>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\nimport './style.scss';\n\nconst TodoItem = ({ todo, id, completeTodo, deleteTodo }) => {\n\tfunction handlerChange() {\n\t\tcompleteTodo(id)\n\t}\n\n\tfunction handlerClick() {\n\t\tdeleteTodo(id)\n\t}\n\n\treturn (\n\t\t<li className={`todo-item${todo.completed ? \" completed\" : \"\"}`} >\n\t\t\t<label><input type=\"checkbox\" className=\"todo-item__complete-todo\" onChange={handlerChange} /></label>\n\t\t\t<h2 className=\"todo-item__title\">{todo.title}</h2>\n\t\t\t<button onClick={handlerClick} className=\"delete\"></button>\n\t\t</li>\n\t);\n}\n\nexport default TodoItem","import React from 'react';\nimport TodoItem from '../../../components/TodoItem';\n\nconst TodoList = ({ todoList, completeTodo, filterMode, deleteTodo }) => {\n    const filterBy = {\n        completed: () => todoList.filter( todo => todo.completed === true ),\n        active: () => todoList.filter( todo => todo.completed === false )\n    }\n\n    const filteredTodoList = !filterBy[filterMode] ? todoList : filterBy[filterMode]()\n\n    return (\n        <ul className=\"todo-list\">\n            {filteredTodoList.map( (todo, key) => <TodoItem todo={todo} key={key} id={key} completeTodo={completeTodo} deleteTodo={deleteTodo} /> )}\n        </ul>\n    );\n}\n\nexport default TodoList","import React, { useEffect, useState } from \"react\";\nimport NewTodo from \"./infra/inputs/NewTodo\";\nimport Actions from \"./infra/layout/Actions\";\nimport Header from \"./infra/layout/Header\";\nimport TodoList from \"./infra/layout/TodoList\";\n\nconst App = () => {\n\tconst [todoList, setTodoList] = useState([]),\n\t\t[filterMode, setFilterMode] = useState(\"all\");\n\n\tuseEffect(() => {\n\t\tsetTodoList(JSON.parse(localStorage.getItem(\"todo-list\")) || []);\n\t}, []);\n\n\tfunction updateList(newList) {\n\t\tsetTodoList(newList);\n\t\tlocalStorage.setItem(\"todo-list\", JSON.stringify(newList));\n\t}\n\n\tfunction createTodo({ target }) {\n\t\tupdateList([\n\t\t\t{ title: target.nextSibling.value, completed: false },\n\t\t\t...todoList,\n\t\t]);\n\t\ttarget.nextSibling.value = \"\";\n\t}\n\n\tfunction completeTodo(todoId) {\n\t\tupdateList(\n\t\t\ttodoList.map((task, id) => {\n\t\t\t\tif (todoId === id)\n\t\t\t\t\treturn { ...task, completed: !task.completed };\n\n\t\t\t\treturn task;\n\t\t\t})\n\t\t);\n\t}\n\n\tfunction deleteTodo(todoId) {\n\t\tupdateList(todoList.filter((todo, id) => id !== todoId));\n\t}\n\n\tfunction filterTodoList({ target }) {\n\t\tsetFilterMode(target.dataset.filterMode);\n\t}\n\n\tfunction clearTodoList() {\n\t\tupdateList(todoList.filter((todo) => todo.completed === false));\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<main>\n\t\t\t\t<NewTodo createTodo={createTodo} />\n\t\t\t\t{todoList.length > 0 && (\n\t\t\t\t\t<div className=\"todo-area\">\n\t\t\t\t\t\t<TodoList\n\t\t\t\t\t\t\ttodoList={todoList}\n\t\t\t\t\t\t\tcompleteTodo={completeTodo}\n\t\t\t\t\t\t\tfilterMode={filterMode}\n\t\t\t\t\t\t\tdeleteTodo={deleteTodo}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Actions\n\t\t\t\t\t\t\tfilterTodoList={filterTodoList}\n\t\t\t\t\t\t\ttodosLeft={\n\t\t\t\t\t\t\t\ttodoList.filter(\n\t\t\t\t\t\t\t\t\t(todo) => todo.completed === false\n\t\t\t\t\t\t\t\t).length\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tactualFilter={filterMode}\n\t\t\t\t\t\t\tclearTodoList={clearTodoList}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</main>\n\t\t</>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./sass/base.scss\";\n\nReactDOM.render(\n\t<App/>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}